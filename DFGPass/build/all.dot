digraph "DFG for all" {
	Node0x55a2bfe8dbf0[shape=ellipse, label="i32 %0\l0x55a2bfe8dbf0"];
	Node0x55a2bfe8e4c0[shape=record, label="  store i32 %0, i32* %3, align 4"];
	Node0x55a2bfe8dd30[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x55a2bfe8dc18[shape=ellipse, label="i32 %1\l0x55a2bfe8dc18"];
	Node0x55a2bfe8e550[shape=record, label="  store i32 %1, i32* %4, align 4"];
	Node0x55a2bfe8e3e0[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x55a2bfe8e5c0[shape=record, label="  %5 = load i32, i32* %3, align 4"];
	Node0x55a2bfe8e630[shape=record, label="  %6 = load i32, i32* %4, align 4"];
	Node0x55a2bfe8e6c0[shape=record, label="  %7 = add nsw i32 %5, %6"];
	Node0x55a2bfe8e730[shape=record, label="  ret i32 %7"];
edge [color=red]
	Node0x55a2bfe8dbf0 -> Node0x55a2bfe8e4c0
	Node0x55a2bfe8e4c0 -> Node0x55a2bfe8dd30
	Node0x55a2bfe8dd30 -> Node0x55a2bfe8e5c0
	Node0x55a2bfe8e5c0 -> Node0x55a2bfe8e6c0
	Node0x55a2bfe8e6c0 -> Node0x55a2bfe8e730
edge [color=blue]
	Node0x55a2bfe8dc18 -> Node0x55a2bfe8e550
	Node0x55a2bfe8e550 -> Node0x55a2bfe8e3e0
	Node0x55a2bfe8e3e0 -> Node0x55a2bfe8e630
	Node0x55a2bfe8e630 -> Node0x55a2bfe8e6c0
	Node0x55a2bfe8ea20[shape=ellipse, label="i32 0\l0x55a2bfe8ea20"];
	Node0x55a2bfe8ea90[shape=record, label="  store i32 0, i32* %1, align 4"];
	Node0x55a2bfe8e8a0[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x55a2bfe8eae0[shape=ellipse, label="i32 10\l0x55a2bfe8eae0"];
	Node0x55a2bfe8eb50[shape=record, label="  store i32 10, i32* %2, align 4"];
	Node0x55a2bfe8e930[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x55a2bfe8ebc0[shape=record, label="  %4 = load i32, i32* %2, align 4"];
	Node0x55a2bfe8eca0[shape=record, label="  store i32 %4, i32* %3, align 4"];
	Node0x55a2bfe8e9d0[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x55a2bfe8ed10[shape=record, label="  %5 = load i32, i32* %2, align 4"];
	Node0x55a2bfe8ed80[shape=record, label="  %6 = load i32, i32* %3, align 4"];
	Node0x55a2bfe8ee30[shape=record, label="  %7 = call i32 @add(i32 %5, i32 %6)"];
	Node0x55a2bfe8ef00[shape=record, label="  ret i32 %7"];
edge [color=red]
	Node0x55a2bfe8ea20 -> Node0x55a2bfe8ea90
	Node0x55a2bfe8ea90 -> Node0x55a2bfe8e8a0
edge [color=blue]
	Node0x55a2bfe8eae0 -> Node0x55a2bfe8eb50
	Node0x55a2bfe8eb50 -> Node0x55a2bfe8e930
	Node0x55a2bfe8e930 -> Node0x55a2bfe8ebc0
	Node0x55a2bfe8ebc0 -> Node0x55a2bfe8eca0
	Node0x55a2bfe8eca0 -> Node0x55a2bfe8e9d0
	Node0x55a2bfe8e9d0 -> Node0x55a2bfe8ed80
	Node0x55a2bfe8ed80 -> Node0x55a2bfe8ee30
	Node0x55a2bfe8ee30 -> Node0x55a2bfe8ef00
	Node0x55a2bfe8e930 -> Node0x55a2bfe8ed10
	Node0x55a2bfe8ed10 -> Node0x55a2bfe8ee30
edge [color=cyan]
edge [color=grey]
	Node0x55a2bfe8ee30 -> Node0x55a2bfe8dbf0
edge [color=grey]
	Node0x55a2bfe8ee30 -> Node0x55a2bfe8dc18
edge [color=grey]
	Node0x55a2bfe8e730 -> Node0x55a2bfe8ee30
}
digraph "DFG for all" {
	Node0x556a52011bf0[shape=ellipse, label="i32 %0\l0x556a52011bf0"];
	Node0x556a520124c0[shape=record, label="  store i32 %0, i32* %3, align 4"];
	Node0x556a52011d30[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x556a52011c18[shape=ellipse, label="i32 %1\l0x556a52011c18"];
	Node0x556a52012550[shape=record, label="  store i32 %1, i32* %4, align 4"];
	Node0x556a520123e0[shape=record, label="  %4 = alloca i32, align 4"];
	Node0x556a520125c0[shape=record, label="  %5 = load i32, i32* %3, align 4"];
	Node0x556a52012630[shape=record, label="  %6 = load i32, i32* %4, align 4"];
	Node0x556a520126c0[shape=record, label="  %7 = add nsw i32 %5, %6"];
	Node0x556a52012730[shape=record, label="  ret i32 %7"];
edge [color=red]
	Node0x556a52011bf0 -> Node0x556a520124c0
	Node0x556a520124c0 -> Node0x556a52011d30
	Node0x556a52011d30 -> Node0x556a520125c0
	Node0x556a520125c0 -> Node0x556a520126c0
	Node0x556a520126c0 -> Node0x556a52012730
edge [color=blue]
	Node0x556a52011c18 -> Node0x556a52012550
	Node0x556a52012550 -> Node0x556a520123e0
	Node0x556a520123e0 -> Node0x556a52012630
	Node0x556a52012630 -> Node0x556a520126c0
	Node0x556a52012a20[shape=ellipse, label="i32 0\l0x556a52012a20"];
	Node0x556a52012a90[shape=record, label="  store i32 0, i32* %1, align 4"];
	Node0x556a520128a0[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x556a52012ae0[shape=ellipse, label="i32 10\l0x556a52012ae0"];
	Node0x556a52012b50[shape=record, label="  store i32 10, i32* %2, align 4"];
	Node0x556a52012930[shape=record, label="  %2 = alloca i32, align 4"];
	Node0x556a52012bc0[shape=record, label="  %4 = load i32, i32* %2, align 4"];
	Node0x556a52012ca0[shape=record, label="  store i32 %4, i32* %3, align 4"];
	Node0x556a520129d0[shape=record, label="  %3 = alloca i32, align 4"];
	Node0x556a52012d10[shape=record, label="  %5 = load i32, i32* %2, align 4"];
	Node0x556a52012d80[shape=record, label="  %6 = load i32, i32* %3, align 4"];
	Node0x556a52012e30[shape=record, label="  %7 = call i32 @add(i32 %5, i32 %6)"];
	Node0x556a52012f00[shape=record, label="  ret i32 %7"];
edge [color=red]
	Node0x556a52012a20 -> Node0x556a52012a90
	Node0x556a52012a90 -> Node0x556a520128a0
edge [color=blue]
	Node0x556a52012ae0 -> Node0x556a52012b50
	Node0x556a52012b50 -> Node0x556a52012930
	Node0x556a52012930 -> Node0x556a52012bc0
	Node0x556a52012bc0 -> Node0x556a52012ca0
	Node0x556a52012ca0 -> Node0x556a520129d0
	Node0x556a520129d0 -> Node0x556a52012d80
	Node0x556a52012d80 -> Node0x556a52012e30
	Node0x556a52012e30 -> Node0x556a52012f00
	Node0x556a52012930 -> Node0x556a52012d10
	Node0x556a52012d10 -> Node0x556a52012e30
edge [color=cyan]
edge [color=grey]
	Node0x556a52012e30 -> Node0x556a52011bf0
edge [color=grey]
	Node0x556a52012e30 -> Node0x556a52011c18
edge [color=grey]
	Node0x556a52012730 -> Node0x556a52012e30
}
digraph "DFG for all" {
edge [color=grey]
	Node0x564138eb5a70 -> Node0x564138eb5890
edge [color=grey]
	Node0x564138eb5878 -> Node0x564138eb5a70
edge [color=grey]
	Node0x564138eb56f0 -> Node0x564138eb5b40
	Node0x564138eb5e30[shape=ellipse, label="i32 1\l0x564138eb5e30"];
	Node0x564138eb6070[shape=record, label="  store i32 1, i32* %1, align 4"];
	Node0x564138eb5de0[shape=record, label="  %1 = alloca i32, align 4"];
	Node0x564138eb60e0[shape=record, label="  %3 = load i32, i32* %1, align 4"];
	Node0x564138eb6170[shape=record, label="  %4 = icmp eq i32 %3, 1"];
	Node0x564138eb6350[shape=record, label="  br i1 %4, label %5, label %6"];
edge [color=red]
	Node0x564138eb5e30 -> Node0x564138eb6070
	Node0x564138eb6070 -> Node0x564138eb5de0
	Node0x564138eb5de0 -> Node0x564138eb60e0
	Node0x564138eb60e0 -> Node0x564138eb6170
	Node0x564138eb6170 -> Node0x564138eb6350
edge [color=grey]
	Node0x564138eb5f50 -> Node0x564138eb5890
edge [color=grey]
	Node0x564138eb5878 -> Node0x564138eb5f50
edge [color=grey]
	Node0x564138eb56f0 -> Node0x564138eb63c0
edge [color=grey]
	Node0x564138eb5bf0 -> Node0x564138eb6550
edge [color=grey]
	Node0x564138eb56f0 -> Node0x564138eb6690
edge [color=grey]
	Node0x564138eb5bf0 -> Node0x564138eb6760
	Node0x564138eb69f0[shape=ellipse, label="i32 0\l0x564138eb69f0"];
	Node0x564138eb6a60[shape=record, label="  store i32 0, i32* %1, align 4"];
	Node0x564138eb6980[shape=record, label="  %1 = alloca i32, align 4"];
edge [color=red]
	Node0x564138eb69f0 -> Node0x564138eb6a60
	Node0x564138eb6a60 -> Node0x564138eb6980
edge [color=grey]
	Node0x564138eb6b80 -> Node0x564138eb5890
edge [color=grey]
	Node0x564138eb5878 -> Node0x564138eb6b80
edge [color=grey]
	Node0x564138eb6810 -> Node0x564138eb6c80
}
